--
-- PostgreSQL database dump
--

-- Dumped from database version 12.2
-- Dumped by pg_dump version 12.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: Groups; Type: TABLE; Schema: public; 
--

CREATE TABLE public."Groups" (
    "ID" bigint NOT NULL,
    "Name" text NOT NULL,
    "Permissions" json NOT NULL
);



--
-- Name: Groups_ID_seq; Type: SEQUENCE; Schema: public; 
--

ALTER TABLE public."Groups" ALTER COLUMN "ID" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."Groups_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Projects; Type: TABLE; Schema: public; 
--

CREATE TABLE public."Projects" (
    "ID" bigint NOT NULL,
    "Name" text NOT NULL,
    "Description" text NOT NULL
);


--
-- Name: Projects_ID_seq; Type: SEQUENCE; Schema: public; 
--

ALTER TABLE public."Projects" ALTER COLUMN "ID" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."Projects_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Queue; Type: TABLE; Schema: public; 
--

CREATE TABLE public."Queue" (
    "ID" bigint NOT NULL,
    "Name" text NOT NULL,
    "Project" bigint NOT NULL
);


--
-- Name: Queue_ID_seq; Type: SEQUENCE; Schema: public; 
--

ALTER TABLE public."Queue" ALTER COLUMN "ID" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."Queue_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Users; Type: TABLE; Schema: public; 
--

CREATE TABLE public."Users" (
    "ID" bigint NOT NULL,
    "Username" text NOT NULL,
    "Password" text NOT NULL,
    "Mail" text NOT NULL,
    "Permissions" json NOT NULL,
    "Firstname" text NOT NULL,
    "Lastname" text NOT NULL
);



--
-- Name: Users_ID_seq; Type: SEQUENCE; Schema: public; 
--

ALTER TABLE public."Users" ALTER COLUMN "ID" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."Users_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Version; Type: TABLE; Schema: public; 
--

CREATE TABLE public."Version" (
    "Schema" integer NOT NULL
);



--
-- Name: map_User_Group; Type: TABLE; Schema: public; 
--

CREATE TABLE public."map_User_Group" (
    "ID" bigint NOT NULL,
    "UserID" bigint NOT NULL,
    "GroupID" bigint NOT NULL
);



--
-- Name: map_User_Group_ID_seq; Type: SEQUENCE; Schema: public; 
--

ALTER TABLE public."map_User_Group" ALTER COLUMN "ID" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."map_User_Group_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Groups Groups_pkey; Type: CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."Groups"
    ADD CONSTRAINT "Groups_pkey" PRIMARY KEY ("ID");


--
-- Name: Projects Projects_pkey; Type: CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."Projects"
    ADD CONSTRAINT "Projects_pkey" PRIMARY KEY ("ID");


--
-- Name: Queue Queue_pkey; Type: CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."Queue"
    ADD CONSTRAINT "Queue_pkey" PRIMARY KEY ("ID");


--
-- Name: Users Users_pkey; Type: CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."Users"
    ADD CONSTRAINT "Users_pkey" PRIMARY KEY ("ID");


--
-- Name: map_User_Group map_User_Group_pkey; Type: CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."map_User_Group"
    ADD CONSTRAINT "map_User_Group_pkey" PRIMARY KEY ("ID");


--
-- Name: None; Type: INDEX; Schema: public; 
--

CREATE INDEX "None" ON public."Queue" USING btree ("Project");


--
-- Name: map_User_Group FK_GroupID_Group; Type: FK CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."map_User_Group"
    ADD CONSTRAINT "FK_GroupID_Group" FOREIGN KEY ("GroupID") REFERENCES public."Groups"("ID") ON DELETE CASCADE;


--
-- Name: Queue FK_Queue_Projekt; Type: FK CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."Queue"
    ADD CONSTRAINT "FK_Queue_Projekt" FOREIGN KEY ("Project") REFERENCES public."Projects"("ID");


--
-- Name: map_User_Group FK_UserID_User; Type: FK CONSTRAINT; Schema: public; 
--

ALTER TABLE ONLY public."map_User_Group"
    ADD CONSTRAINT "FK_UserID_User" FOREIGN KEY ("UserID") REFERENCES public."Users"("ID") ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

-- This script was generated by a beta version of the Schema Diff utility in pgAdmin 4. 
-- This version does not include dependency resolution, and may require manual changes 
-- to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps. 
BEGIN;
CREATE TABLE public."Severities"
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Enabled" boolean NOT NULL DEFAULT true,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "DisplayColor" text COLLATE pg_catalog."default" NOT NULL DEFAULT '#000000'::text,
    "Priority" integer NOT NULL DEFAULT 10,
    CONSTRAINT "Severities_pkey" PRIMARY KEY ("ID")
)

TABLESPACE pg_default;


END;

-- This script was generated by a beta version of the Schema Diff utility in pgAdmin 4. 
-- This version does not include dependency resolution, and may require manual changes 
-- to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps. 
BEGIN;
-- WARNING:
-- The SQL statement below would normally be used to alter the datatype for the Enabled column, however,
-- the current datatype cannot be cast to the target datatype so this conversion cannot be made automatically.

 -- ALTER TABLE public."Severities"
 --     ALTER COLUMN "Enabled" TYPE boolean;

-- WARNING:
-- The SQL statement below would normally be used to alter the datatype for the Name column, however,
-- the current datatype cannot be cast to the target datatype so this conversion cannot be made automatically.

 -- ALTER TABLE public."Severities"
 --     ALTER COLUMN "Name" TYPE text COLLATE pg_catalog."default";

-- WARNING:
-- The SQL statement below would normally be used to alter the datatype for the DisplayColor column, however,
-- the current datatype cannot be cast to the target datatype so this conversion cannot be made automatically.

 -- ALTER TABLE public."Severities"
 --     ALTER COLUMN "DisplayColor" TYPE text COLLATE pg_catalog."default";

ALTER TABLE public."Severities"
    ADD COLUMN "Project" bigint;
ALTER TABLE public."Severities"
    ADD CONSTRAINT "FK_Severity_Project" FOREIGN KEY ("Project")
    REFERENCES public."Projects" ("ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

END;

BEGIN;
CREATE TABLE public."Statuses"
(
    "ID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Enabled" boolean NOT NULL DEFAULT true,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "DisplayColor" text COLLATE pg_catalog."default" NOT NULL,
    "TicketsVisible" boolean NOT NULL DEFAULT true,
    "Project" bigint NOT NULL,
    CONSTRAINT "Statuses_pkey" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Project" FOREIGN KEY ("Project")
        REFERENCES public."Projects" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;
END;

BEGIN;

CREATE TABLE public."Tickets"
(
    "ID" bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Title" text COLLATE pg_catalog."default" NOT NULL,
    "Description" text COLLATE pg_catalog."default" NOT NULL,
    "Queue" bigint NOT NULL,
    "Owner" bigint,
    "Severity" bigint NOT NULL,
    "Status" bigint NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "LastModified" timestamp with time zone NOT NULL,
    "StalledUntil" timestamp with time zone,
    "Meta" json NOT NULL,
    CONSTRAINT "Tickets_pkey" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Owner" FOREIGN KEY ("Owner")
        REFERENCES public."Users" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_Queue" FOREIGN KEY ("Queue")
        REFERENCES public."Queue" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT,
    CONSTRAINT "FK_Severity" FOREIGN KEY ("Severity")
        REFERENCES public."Severities" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "FK_Status" FOREIGN KEY ("Status")
        REFERENCES public."Statuses" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;


END;

BEGIN;
CREATE TABLE public."Relations"
(
    "ID" bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Ticket1" bigint NOT NULL,
    "Ticket2" bigint NOT NULL,
    "Type" int NOT NULL,
    CONSTRAINT "PK_ID" PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Ticket1" FOREIGN KEY ("Ticket1")
        REFERENCES public."Tickets" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT "FK_Ticket2" FOREIGN KEY ("Ticket2")
        REFERENCES public."Tickets" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;
END;

BEGIN;
CREATE TABLE public."Actions"
(
    "ID" bigint NOT NULL GENERATED ALWAYS AS IDENTITY,
    "Type" integer NOT NULL,
    "Title" text NOT NULL,
    "Content" text NOT NULL,
    "Ticket" bigint NOT NULL,
    "IssuedAt" timestamp with time zone NOT NULL,
    "IssuedBy" bigint NOT NULL,
    PRIMARY KEY ("ID"),
    CONSTRAINT "FK_Ticket" FOREIGN KEY ("Ticket")
        REFERENCES public."Tickets" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
        NOT VALID,
    CONSTRAINT "FK_User" FOREIGN KEY ("IssuedBy")
        REFERENCES public."Users" ("ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
        NOT VALID
);
END;